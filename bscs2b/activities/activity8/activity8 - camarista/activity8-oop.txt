ACTIVITY 8
9.6.1 Defining Terms
1. Class is like a template of a program. It defines data types in a specific field.
2. Object is like a template within a template of a program. It is composed of set of data on how an object acts.
3. Instantiate is  a process where method implementations among objects from a same class occur.
4. Instance Variable is a dynamic variable and is created separately.
5. Instance Method - is dynamic method and is created separately.
6. Class Variables or static member variables - are variables that are static and belong to the class itself. All objects has the same value in same class.
7. Constructor - are functions that is called when the class is being executed.

9.6.2 Java Scavenger Hunt
1. Look for a method that checks if a certain String ends with a certain suffix. For
example, if the given string is "Hello", the method should return true the suffix given
is "lo", and false if the given suffix is "alp".

Class: String
Method Declaration: boolean public static endsWith()
Sample Usage:
String VarStr = "Hello"
System.out.println(VarStr.endsWith("lo"));
//output: true
System.out.println(VarStr.endsWith("ple"));
//ouput: false


2. Look for the method that determines the character representation for a specific digit
in the specified radix. For example, if the input digit is 15, and the radix is 16, the
method would return the character F, since F is the hexadecimal representation for
the number 15 (base 10)

Class: Character
Method Declaration: public static char forDigit(int digit, int radix)  
Sample Usage:
char x = Character.forDigit(15,16);
System.out.print(x);
//output: false


3. Look for the method that terminates the currently running Java Virtual Machine

Class: System
Method Declaration: public static void exit(int j)
Sample Usage:
System.exit(0);


4. Look for the method that gets the floor of a double value. For example, if I input a
3.13, the method should return the value 3.

Class: Math
Method Declaration: public static double floor(double a)
Sample Usage:
double myVal = Math.floor(3.13);
System.out.println(myVal);
//output: 3


5. Look for the method that determines if a certain character is a digit. For example, if I
input '3', it returns the value true.

Class: Character
Method Declaration: public static boolean isDigit(char ch)
Sample Usage:
boolean valDigit = Character.isDigit('3')
System.out.println(valDigit);
//output: true

